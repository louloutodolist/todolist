name: Build APK (Debug)

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # If you uploaded the ZIP to the repo root, unzip and move files into place.
      - name: Unzip project (if ZIP is present)
        shell: bash
        run: |
          set -e
          # Use your exact ZIP name here if different:
          if [ -f "TodoOfflineApp-android.zip" ]; then
            unzip -q "TodoOfflineApp-android.zip"
          fi
          # Move project folder contents to repo root
          if [ -d "TodoOfflineApp" ]; then
            shopt -s dotglob
            mv TodoOfflineApp/* .
            rm -rf TodoOfflineApp
          fi
          ls -la

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      # Install Android SDK & commandline tools, set ANDROID_SDK_ROOT
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components (platform 34 & build-tools 34.0.0)
        run: |
          sdkmanager --install "platform-tools" "platforms;android-34" "build-tools;34.0.0"
          yes | sdkmanager --licenses

      - name: Point Gradle to the SDK
        run: echo "sdk.dir=$ANDROID_SDK_ROOT" > local.properties

      # Ensure we have a Gradle wrapper; generate if missing
      - name: Ensure Gradle wrapper
        shell: bash
        run: |
          if [ ! -f gradlew ]; then
            curl -s "https://get.sdkman.io" | bash
            source "$HOME/.sdkman/bin/sdkman-init.sh"
            sdk install gradle 8.7
            gradle wrapper --gradle-version 8.7
          fi
          chmod +x gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug --no-daemon

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk